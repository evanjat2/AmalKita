<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>